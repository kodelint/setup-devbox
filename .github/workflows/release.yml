name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Run only on version tags like v1.2.3

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        arch: [ x86_64 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install updates (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y pkg-config build-essential

      - name: Build release binary
        run: cargo build --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: git-pr-${{ matrix.os }}-${{ matrix.arch }}
          path: target/release/setup-devbox

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: setup-devbox-macos-latest-x86_64
          path: ./artifact/macos-x86_64

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Upload macOS binary to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact/macos-x86_64/setup-devbox
          asset_name: setup-devbox-macos-x86_64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}